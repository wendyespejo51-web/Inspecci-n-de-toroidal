// ===== 1. LISTA DE LOS 1033 SED CONVENCIONALES =====
const listaSED = [
"00021S",
"00023S",
"00028S",
"00029S",
"00030S",
"00031S",
"00036S",
"00041S",
"00043S",
"00044S",
"00049S",
"00051S",
"00052S",
"00054S",
"00055S",
"00056S",
"00058S",
"00059S",
"00061S",
"00062S",
"00063S",
"00064S",
"00065S",
"00066S",
"00067S",
"00068S",
"00070S",
"00071S",
"00072S",
"00073S",
"00074S",
"00075S",
"00077S",
"00078S",
"00079S",
"00081S",
"00089S",
"00113S",
"00115S",
"00117S",
"00120S",
"00127S",
"00131S",
"00132S",
"00133S",
"00136S",
"00137S",
"00140S",
"00141S",
"00142S",
"00145S",
"00146S",
"00147S",
"00148S",
"00151S",
"00153S",
"00154S",
"00155S",
"00157S",
"00161S",
"00162S",
"00167S",
"00168S",
"00169S",
"00170S",
"00172S",
"00175S",
"00181S",
"00183S",
"00184S",
"00186S",
"00187S",
"00188S",
"00189S",
"00193S",
"00194S",
"00200S",
"00201S",
"00202S",
"00204S",
"00206S",
"00208S",
"00209S",
"00210S",
"00213S",
"00218S",
"00220S",
"00221S",
"00222S",
"00224S",
"00226S",
"00229S",
"00232S",
"00236S",
"00246S",
"00247S",
"00251S",
"00256S",
"00265S",
"00266S",
"00268S",
"00269S",
"00270S",
"00271S",
"00273S",
"00277S",
"00278S",
"00283S",
"00284S",
"00288S",
"00289S",
"00291S",
"00296S",
"00297S",
"00300S",
"00301S",
"00302S",
"00303S",
"00304S",
"00305S",
"00306S",
"00307S",
"00308S",
"00310S",
"00312S",
"00313S",
"00314S",
"00317S",
"00320S",
"00322S",
"00323S",
"00324S",
"00329S",
"00330S",
"00331S",
"00333S",
"00334S",
"00335S",
"00336S",
"00337S",
"00342S",
"00348S",
"00349S",
"00351S",
"00352S",
"00356S",
"00360S",
"00361S",
"00362S",
"00367S",
"00376S",
"00379S",
"00380S",
"00381S",
"00382S",
"00383S",
"00387S",
"00389S",
"00392S",
"00397S",
"00404S",
"00405S",
"00406S",
"00407S",
"00409S",
"00411S",
"00412S",
"00414S",
"00415S",
"00418S",
"00421S",
"00425S",
"00426S",
"00429S",
"00433S",
"00434S",
"00436S",
"00438S",
"00439S",
"00442S",
"00448S",
"00451S",
"00452S",
"00453S",
"00454S",
"00456S",
"00457S",
"00458S",
"00459S",
"00460S",
"00462S",
"00465S",
"00466S",
"00469S",
"00470S",
"00471S",
"00472S",
"00473S",
"00474S",
"00475S",
"00476S",
"00477S",
"00479S",
"00480S",
"00481S",
"00482S",
"00487S",
"00488S",
"00489S",
"00490S",
"00491S",
"00499S",
"00503S",
"00506S",
"00508S",
"00510S",
"00511S",
"00516S",
"00518S",
"00523S",
"00525S",
"00530S",
"00531S",
"00535S",
"00536S",
"00537S",
"00538S",
"00540S",
"00542S",
"00547S",
"00549S",
"00550S",
"00551S",
"00552S",
"00554S",
"00555S",
"00556S",
"00557S",
"00558S",
"00559S",
"00560S",
"00561S",
"00562S",
"00563S",
"00564S",
"00575S",
"00578S",
"00581S",
"00582S",
"00583S",
"00586S",
"00588S",
"00589S",
"00591S",
"00596S",
"00597S",
"00599S",
"00600S",
"00601S",
"00602S",
"00603S",
"00617S",
"00618S",
"00619S",
"00620S",
"00621S",
"00622S",
"00623S",
"00624S",
"00630S",
"00632S",
"00633S",
"00642S",
"00643S",
"00644S",
"00645S",
"00646S",
"00647S",
"00648S",
"00649S",
"00650S",
"00653S",
"00661S",
"00663S",
"00664S",
"00665S",
"00667S",
"00670S",
"00671S",
"00672S",
"00673S",
"00676S",
"00687S",
"00688S",
"00689S",
"00690S",
"00696S",
"00697S",
"00698S",
"00702S",
"00705S",
"00706S",
"00707S",
"00708S",
"00714S",
"00727S",
"00728S",
"00729S",
"00733S",
"00734S",
"00736S",
"00740S",
"00741S",
"00743S",
"00744S",
"00751S",
"00752S",
"00753S",
"00759S",
"00760S",
"00762S",
"00763S",
"00766S",
"00767S",
"00768S",
"00769S",
"00771S",
"00773S",
"00774S",
"00785S",
"00786S",
"00787S",
"00788S",
"00789S",
"00790S",
"00791S",
"00795S",
"00796S",
"00797S",
"00800S",
"00801S",
"00804S",
"00807S",
"00808S",
"00809S",
"00811S",
"00812S",
"00814S",
"00816S",
"00820S",
"00823S",
"00824S",
"00826S",
"00827S",
"00828S",
"00830S",
"00834S",
"00837S",
"00839S",
"00840S",
"00842S",
"00843S",
"00844S",
"00845S",
"00846S",
"00847S",
"00848S",
"00849S",
"00850S",
"00852S",
"00854S",
"00860S",
"00862S",
"00863S",
"00866S",
"00869S",
"00878S",
"00879S",
"00883S",
"00884S",
"00886S",
"00888S",
"00889S",
"00894S",
"00895S",
"00896S",
"00900S",
"00903S",
"00904S",
"00906S",
"00909S",
"00910S",
"00911S",
"00912S",
"00913S",
"00914S",
"00915S",
"00916S",
"00917S",
"00922S",
"00928S",
"00933S",
"00934S",
"00935S",
"00936S",
"00940S",
"00941S",
"00945S",
"00946S",
"00964S",
"00965S",
"00967S",
"00968S",
"00971S",
"00972S",
"00973S",
"00974S",
"00978S",
"00979S",
"00981S",
"00982S",
"00984S",
"00985S",
"00987S",
"00988S",
"00994S",
"00995S",
"00999S",
"01001S",
"01004S",
"01006S",
"01007S",
"01008S",
"01012S",
"01016S",
"01017S",
"01021S",
"01022S",
"01024S",
"01026S",
"01027S",
"01028S",
"01031S",
"01032S",
"01033S",
"01034S",
"01037S",
"01038S",
"01039S",
"01040S",
"01041S",
"01043S",
"01045S",
"01047S",
"01049S",
"01050S",
"01051S",
"01052S",
"01053S",
"01057S",
"01059S",
"01064S",
"01066S",
"01067S",
"01071S",
"01077S",
"01085S",
"01086S",
"01087S",
"01091S",
"01093S",
"01095S",
"01097S",
"01098S",
"01099S",
"01101S",
"01102S",
"01103S",
"01104S",
"01107S",
"01109S",
"01112S",
"01116S",
"01120S",
"01121S",
"01123S",
"01128S",
"01129S",
"01137S",
"01141S",
"01142S",
"01144S",
"01145S",
"01151S",
"01155S",
"01156S",
"01160S",
"01162S",
"01163S",
"01164S",
"01166S",
"01168S",
"01169S",
"01170S",
"01171S",
"01172S",
"01174S",
"01182S",
"01185S",
"01186S",
"01188S",
"01189S",
"01194S",
"01195S",
"01197S",
"01202S",
"01203S",
"01205S",
"01209S",
"01210S",
"01211S",
"01212S",
"01213S",
"01214S",
"01215S",
"01216S",
"01222S",
"01228S",
"01230S",
"01239S",
"01243S",
"01246S",
"01248S",
"01249S",
"01258S",
"01259S",
"01260S",
"01261S",
"01262S",
"01263S",
"01264S",
"01265S",
"01266S",
"01267S",
"01268S",
"01271S",
"01273S",
"01274S",
"01275S",
"01276S",
"01277S",
"01279S",
"01281S",
"01282S",
"01283S",
"01286S",
"01288S",
"01289S",
"01291S",
"01292S",
"01293S",
"01294S",
"01295S",
"01297S",
"01298S",
"01299S",
"01300S",
"01301S",
"01302S",
"01303S",
"01304S",
"01305S",
"01306S",
"01307S",
"01308S",
"01309S",
"01310S",
"01311S",
"01312S",
"01313S",
"01314S",
"01315S",
"01316S",
"01317S",
"01318S",
"01321S",
"01325S",
"01327S",
"01332S",
"01333S",
"01339S",
"01346S",
"01347S",
"01348S",
"01349S",
"01350S",
"01353S",
"01354S",
"01356S",
"01357S",
"01360S",
"01361S",
"01364S",
"01365S",
"01366S",
"01368S",
"01369S",
"01370S",
"01371S",
"01372S",
"01373S",
"01374S",
"01375S",
"01376S",
"01377S",
"01379S",
"01380S",
"01381S",
"01383S",
"01384S",
"01385S",
"01386S",
"01387S",
"01388S",
"01389S",
"01390S",
"01391S",
"01394S",
"01395S",
"01396S",
"01397S",
"01399S",
"01400S",
"01401S",
"01402S",
"01403S",
"01404S",
"01405S",
"01406S",
"01408S",
"01409S",
"01410S",
"01411S",
"01412S",
"01413S",
"01414S",
"01416S",
"01417S",
"01418S",
"01419S",
"01420S",
"01422S",
"01423S",
"01425S",
"01426S",
"01427S",
"01428S",
"01429S",
"01430S",
"01431S",
"01433S",
"01435S",
"01436S",
"01437S",
"01438S",
"01439S",
"01440S",
"01441S",
"01442S",
"01444S",
"01445S",
"01446S",
"01447S",
"01448S",
"01449S",
"01451S",
"01452S",
"01453S",
"01454S",
"01455S",
"01457S",
"01458S",
"01460S",
"01462S",
"01463S",
"01464S",
"01465S",
"01466S",
"01468S",
"01469S",
"01470S",
"01472S",
"01473S",
"01474S",
"01476S",
"01478S",
"01480S",
"01481S",
"01483S",
"01485S",
"01487S",
"01490S",
"01491S",
"01493S",
"01494S",
"01496S",
"01497S",
"01498S",
"01501S",
"01503S",
"01504S",
"01506S",
"01508S",
"01515S",
"01517S",
"01520S",
"01521S",
"01522S",
"01523S",
"01524S",
"01525S",
"01527S",
"01528S",
"01530S",
"01531S",
"01532S",
"01533S",
"01535S",
"01537S",
"01539S",
"01540S",
"01541S",
"01543S",
"01546S",
"01547S",
"01548S",
"01549S",
"01550S",
"01551S",
"01554S",
"01555S",
"01556S",
"01559S",
"01560S",
"01562S",
"01564S",
"01566S",
"01567S",
"01570S",
"01572S",
"01574S",
"01575S",
"01576S",
"01577S",
"01578S",
"01579S",
"01580S",
"01581S",
"01582S",
"01585S",
"01586S",
"01587S",
"01588S",
"01592S",
"01593S",
"01595S",
"01598S",
"01599S",
"01600S",
"01601S",
"01602S",
"01603S",
"01604S",
"01606S",
"01607S",
"01609S",
"01610S",
"01611S",
"01613S",
"01614S",
"01616S",
"01618S",
"01619S",
"01620S",
"01624S",
"01626S",
"01628S",
"01629S",
"01630S",
"01631S",
"01632S",
"01634S",
"01635S",
"01636S",
"01637S",
"01638S",
"01641S",
"01643S",
"01645S",
"01646S",
"01649S",
"01651S",
"01653S",
"01654S",
"01655S",
"01656S",
"01657S",
"01660S",
"01663S",
"01665S",
"01666S",
"01668S",
"01669S",
"01672S",
"01673S",
"01676S",
"01677S",
"01678S",
"01679S",
"01683S",
"01684S",
"01686S",
"01693S",
"01695S",
"01696S",
"01697S",
"01700S",
"01703S",
"01705S",
"01706S",
"01709S",
"01710S",
"01711S",
"01713S",
"01718S",
"01719S",
"01720S",
"01722S",
"01723S",
"01724S",
"01725S",
"01726S",
"01727S",
"01736S",
"01738S",
"01739S",
"01742S",
"01743S",
"01744S",
"01745S",
"01746S",
"01747S",
"01748S",
"01749S",
"01750S",
"01752S",
"01753S",
"01754S",
"01755S",
"01756S",
"01757S",
"01760S",
"01761S",
"01765S",
"01766S",
"01767S",
"01768S",
"01769S",
"01770S",
"01771S",
"01774S",
"01775S",
"01778S",
"01781S",
"01784S",
"01787S",
"01788S",
"01789S",
"01790S",
"01791S",
"01792S",
"01793S",
"01794S",
"01795S",
"01796S",
"01797S",
"01798S",
"01799S",
"01800S",
"01801S",
"01802S",
"01803S",
"01804S",
"01805S",
"01806S",
"01807S",
"01808S",
"01809S",
"01810S",
"01811S",
"01812S",
"01815S",
"01816S",
"01817S",
"01818S",
"01819S",
"01820S",
"01821S",
"01822S",
"01823S",
"01824S",
"01825S",
"01827S",
"01828S",
"01829S",
"01830S",
"01831S",
"01832S",
"01834S",
"01835S",
"01837S",
"01838S",
"01839S",
"01840S",
"01841S",
"01842S",
"01843S",
"01844S",
"01845S",
"01846S",
"01847S",
"01848S",
"01850S",
"01852S",
"01853S",
"01854S",
"01855S",
"01856S",
"01857S",
"01858S",
"01859S",
"01860S",
"01861S",
"01863S",
"01864S",
"01867S",
"01869S",
"01872S",
"01873S",
"01874S",
"01876S",
"01877S",
"01878S",
"01879S",
"01880S",
"01882S",
"01885S",
"01886S",
"01889S",
"01890S",
"01893S",
"01894S",
"01895S",
"01897S",
"01898S",
"01899S",
"01902S",
"01905S",
"01907S",
"01908S",
"01909S",
"01910S",
"01911S",
"01913S",
"01915S",
"01917S",
"01920S",
"01924S",
"01925S",
"01927S",
"01928S",
"01930S",
"01931S",
"01933S",
"01934S",
"01935S",
"01938S",
"01939S",
"01943S",
"01944S",
"01945S",
"01946S",
"01947S",
"01948S",
"01949S",
"01950S",
"01951S",
"01952S",
"01954S",
"01956S",
"01959S",
"01960S",
"01962S",
"01964S",
"01965S",
"01966S",
"01967S",
"01968S",
"01969S",
"01970S",
"01972S",
"01973S",
"01974S",
"01975S",
"01976S",
"01977S",
"01978S",
"01981S",
"01982S",
"01983S",
"01984S",
"01988S",
"01989S",
"01992S",
"01994S",
"01995S",
"01997S",
"01998S",
"01999S",
"02000S",
"04000S",
"04010S",
"04030S",
"04050S",
"05050S",
"06000S",
"80001S",
];

// ===== 2. AUTOCOMPLETADO DEL CAMPO SED =====
const inputSED = document.getElementById("codigo");
const suggestionsList = document.getElementById("suggestions");

// Mostrar sugerencias mientras escribe
inputSED.addEventListener("input", function () {
  const valor = inputSED.value.trim().toUpperCase(); // Mayúsculas, sin espacios
  suggestionsList.innerHTML = "";
  suggestionsList.style.display = "none";

  if (valor.length === 0) return;

  // Filtrar SED que empiezan con lo que escribió
  const filtrados = listaSED.filter(sed => sed.includes(valor));

  if (filtrados.length > 0) {
    suggestionsList.style.display = "block";
    filtrados.forEach(sed => {
      const li = document.createElement("li");
      li.textContent = sed;
      li.addEventListener("click", () => {
        inputSED.value = sed;
        suggestionsList.style.display = "none";
        inputSED.focus();
      });
      suggestionsList.appendChild(li);
    });
  }
});

// Cerrar sugerencias si se hace clic fuera
document.addEventListener("click", function (e) {
  if (e.target !== inputSED && !suggestionsList.contains(e.target)) {
    suggestionsList.style.display = "none";
  }
});

// Cerrar con tecla ESC
inputSED.addEventListener("keydown", function (e) {
  if (e.key === "Escape") {
    suggestionsList.style.display = "none";
  }
});

document.addEventListener("DOMContentLoaded", function () {
  // 📌 Generar la fecha actual
  let hoy = new Date();
  let year = hoy.getFullYear();
  let month = String(hoy.getMonth() + 1).padStart(2, '0');
  let day = String(hoy.getDate()).padStart(2, '0');

  // Formato para mostrar en el input (type="date")
  let fechaISO = `${year}-${month}-${day}`;
  document.getElementById("fecha").value = fechaISO;

  // Formato texto dd/mm/yyyy para registrar en Excel
  let fechaTexto = `${day}/${month}/${year}`;
  document.getElementById("fecha").setAttribute("data-texto", fechaTexto);
});

document.getElementById("enviarBtn").addEventListener("click", async function(e) {
  e.preventDefault();

  // Objeto para almacenar los datos
  const datos = {};

  // Lista de IDs de los campos, asegurando que coincidan con el esquema
  const campos = [
    "fecha", "codigo", "alim", "Celda", "NodoFinal","Responsable", "Compañero", 
    "Toroidal", "Terminal", "CablePeinado", "Tuboflex", "Criticidad", 
    "Hallazgos", "Observacion"
  ];

  // Capturar datos de cada campo de número
  campos.forEach(campo => {
    const elemento = document.getElementById(campo);
    if (elemento) {
      if (["codigo","NodoFinal"].includes(campo)) {
        datos[campo] = parseInt(elemento.value);
        } else if (["fecha"].includes(campo)) {
        // ⚡ Usamos la fecha en formato texto dd/mm/yyyy
        datos[campo] = elemento.getAttribute("data-texto");
      } else {
        datos[campo] = elemento.value;
      }
    }
  });

  // Procesar las imágenes
  datos.imagenes = [];
  const archivos = document.getElementById("imagenes").files;
  for (const archivo of archivos) {
    if (datos.imagenes.length >= 5) break;
    const base64String = await new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.readAsDataURL(archivo);
      reader.onload = () => resolve(reader.result.split(',')[1]);
      reader.onerror = (error) => reject(error);
    });
    datos.imagenes.push({
      nombre: archivo.name,
      contenidoBase64: base64String
    });
  }

  // Debugging: Imprime el objeto que se va a enviar
  console.log("Objeto JSON a enviar:", datos);
  
  try {
    const response = await fetch("xxx", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(datos)
    });

    if (response.ok) {
      alert("✅ Datos enviados correctamente");
      document.getElementById("RegistroInspeccionToroidal").reset();
      
      // Reiniciar fecha con la actual después de limpiar formulario
      let hoy = new Date();
      let year = hoy.getFullYear();
      let month = String(hoy.getMonth() + 1).padStart(2, '0');
      let day = String(hoy.getDate()).padStart(2, '0');
      let fechaISO = `${year}-${month}-${day}`;
      let fechaTexto = `${day}/${month}/${year}`;
      const fechaInput = document.getElementById("fecha");
      fechaInput.value = fechaISO;
      fechaInput.setAttribute("data-texto", fechaTexto);
      
    } else {
      alert("❌ Error al enviar datos");
    }
  } catch (error) {
    alert("⚠️ Hubo un problema con la conexión");
    console.error(error);
  }
});
